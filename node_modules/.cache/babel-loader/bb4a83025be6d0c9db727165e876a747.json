{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace (local)\\\\16USMASK\\\\16usmask\\\\src\\\\Context\\\\AuthProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef, memo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth } from \"../firebase/config\";\nimport { Spin } from \"antd\";\nimport { db } from \"../firebase/config\";\nimport { collection, getDocs } from \"firebase/firestore\"; // import { addDocument } from \"../firebase/services\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext();\n\nfunction AuthProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState({});\n  let navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(true);\n  const balance = useRef(124.12);\n\n  async function readData(uid) {\n    let arrs = [];\n    const querySnapshot = await getDocs(collection(db, \"users\"));\n    querySnapshot.forEach(doc => {\n      arrs = [...arrs, doc.data()];\n    });\n    localStorage.setItem(\"users\", JSON.stringify(arrs));\n  }\n\n  useEffect(() => {\n    const unsubscibed = auth.onAuthStateChanged(user => {\n      if (user) {\n        const {\n          displayName,\n          email,\n          uid,\n          photoURL\n        } = user;\n        readData(uid);\n        setUser({\n          displayName,\n          email,\n          uid,\n          photoURL,\n          balance: balance.current\n        });\n        setIsLoading(false);\n        navigate(\"/\");\n        return;\n      } // reset user info\n\n\n      setUser({});\n      setIsLoading(false);\n      navigate(\"/home\");\n    }); // clean function\n\n    return () => {\n      unsubscibed();\n    };\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user\n    },\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Spin, {\n      style: {\n        position: \"fixed\",\n        inset: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 20\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthProvider, \"D+9XMmKbrtmEsFQwtDt3Wkd3j3A=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthProvider;\nexport default _c2 = /*#__PURE__*/memo(AuthProvider);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthProvider\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/Workspace (local)/16USMASK/16usmask/src/Context/AuthProvider.js"],"names":["React","useEffect","useState","useRef","memo","useNavigate","auth","Spin","db","collection","getDocs","AuthContext","createContext","AuthProvider","children","user","setUser","navigate","isLoading","setIsLoading","balance","readData","uid","arrs","querySnapshot","forEach","doc","data","localStorage","setItem","JSON","stringify","unsubscibed","onAuthStateChanged","displayName","email","photoURL","current","position","inset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,EAA6CC,IAA7C,QAAyD,OAAzD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,EAAT,QAAmB,oBAAnB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,oBAApC,C,CACA;;;AAEA,OAAO,MAAMC,WAAW,gBAAGX,KAAK,CAACY,aAAN,EAApB;;AAEP,SAASC,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAIe,QAAQ,GAAGZ,WAAW,EAA1B;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMkB,OAAO,GAAGjB,MAAM,CAAC,MAAD,CAAtB;;AACA,iBAAekB,QAAf,CAAwBC,GAAxB,EAA6B;AAC3B,QAAIC,IAAI,GAAG,EAAX;AACA,UAAMC,aAAa,GAAG,MAAMd,OAAO,CAACD,UAAU,CAACD,EAAD,EAAK,OAAL,CAAX,CAAnC;AACAgB,IAAAA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;AAC7BH,MAAAA,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAUG,GAAG,CAACC,IAAJ,EAAV,CAAP;AACD,KAFD;AAGAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAA9B;AACD;;AACDtB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM+B,WAAW,GAAG1B,IAAI,CAAC2B,kBAAL,CAAyBlB,IAAD,IAAU;AACpD,UAAIA,IAAJ,EAAU;AACR,cAAM;AAAEmB,UAAAA,WAAF;AAAeC,UAAAA,KAAf;AAAsBb,UAAAA,GAAtB;AAA2Bc,UAAAA;AAA3B,YAAwCrB,IAA9C;AACAM,QAAAA,QAAQ,CAACC,GAAD,CAAR;AAEAN,QAAAA,OAAO,CAAC;AACNkB,UAAAA,WADM;AAENC,UAAAA,KAFM;AAGNb,UAAAA,GAHM;AAINc,UAAAA,QAJM;AAKNhB,UAAAA,OAAO,EAAEA,OAAO,CAACiB;AALX,SAAD,CAAP;AAOAlB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,QAAAA,QAAQ,CAAC,GAAD,CAAR;AACA;AACD,OAfmD,CAgBpD;;;AACAD,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD,KApBmB,CAApB,CADc,CAuBd;;AACA,WAAO,MAAM;AACXe,MAAAA,WAAW;AACZ,KAFD;AAGD,GA3BQ,EA2BN,CAACf,QAAD,CA3BM,CAAT;AA6BA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEF,MAAAA;AAAF,KAA7B;AAAA,cACGG,SAAS,gBAAG,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEoB,QAAAA,QAAQ,EAAE,OAAZ;AAAqBC,QAAAA,KAAK,EAAE;AAA5B;AAAb;AAAA;AAAA;AAAA;AAAA,YAAH,GAAsDzB;AADlE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA/CQD,Y;UAEQR,W;;;KAFRQ,Y;AAiDT,kCAAeT,IAAI,CAACS,YAAD,CAAnB","sourcesContent":["import React, { useEffect, useState, useRef, memo } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"../firebase/config\";\r\nimport { Spin } from \"antd\";\r\nimport { db } from \"../firebase/config\";\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\n// import { addDocument } from \"../firebase/services\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nfunction AuthProvider({ children }) {\r\n  const [user, setUser] = useState({});\r\n  let navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const balance = useRef(124.12);\r\n  async function readData(uid) {\r\n    let arrs = [];\r\n    const querySnapshot = await getDocs(collection(db, \"users\"));\r\n    querySnapshot.forEach((doc) => {\r\n      arrs = [...arrs, doc.data()];\r\n    });\r\n    localStorage.setItem(\"users\", JSON.stringify(arrs));\r\n  }\r\n  useEffect(() => {\r\n    const unsubscibed = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        const { displayName, email, uid, photoURL } = user;\r\n        readData(uid);\r\n\r\n        setUser({\r\n          displayName,\r\n          email,\r\n          uid,\r\n          photoURL,\r\n          balance: balance.current,\r\n        });\r\n        setIsLoading(false);\r\n        navigate(\"/\");\r\n        return;\r\n      }\r\n      // reset user info\r\n      setUser({});\r\n      setIsLoading(false);\r\n      navigate(\"/home\");\r\n    });\r\n\r\n    // clean function\r\n    return () => {\r\n      unsubscibed();\r\n    };\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user }}>\r\n      {isLoading ? <Spin style={{ position: \"fixed\", inset: 0 }} /> : children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default memo(AuthProvider);\r\n"]},"metadata":{},"sourceType":"module"}