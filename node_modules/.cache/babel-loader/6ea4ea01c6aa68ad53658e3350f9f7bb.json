{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace_local\\\\16USMASK\\\\16usmask\\\\src\\\\components\\\\ModalToken.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport listToken from \"../firebase/tokenList\";\nimport ETH from \"../assets/token/eth.png\";\nimport BNB from \"../assets/token/bnb.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenRow = styled.div`\n  display: flex;\n  align-items: center;\n  min-height: 60px;\n  border-bottom: 1px solid #d9d9d9;\n\n  .img {\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    border: 1px solid #333;\n    padding: 4px;\n    margin-left: 16px;\n  }\n  .name {\n    font-size: 24px;\n    line-height: 24px;\n    font-weight: bold;\n    margin-left: 8px;\n  }\n`;\n_c = TokenRow;\nexport default function ModalToken(_ref) {\n  let {\n    token\n  } = _ref;\n  const count = listToken.forEach((item, index) => {\n    if (item.name === token) return index;\n  });\n  return /*#__PURE__*/_jsxDEV(TokenRow, {\n    className: `${token}`,\n    children: [listToken.forEach((item, index) => {\n      if (item.name === token) return /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"img\",\n        src: item.logo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"name\",\n      children: token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ModalToken;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TokenRow\");\n$RefreshReg$(_c2, \"ModalToken\");","map":{"version":3,"sources":["D:/Workspace_local/16USMASK/16usmask/src/components/ModalToken.js"],"names":["React","styled","listToken","ETH","BNB","TokenRow","div","ModalToken","token","count","forEach","item","index","name","logo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;;AAEA,MAAMC,QAAQ,GAAGJ,MAAM,CAACK,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;KAAMD,Q;AAsBN,eAAe,SAASE,UAAT,OAA+B;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;AAC5C,QAAMC,KAAK,GAAGP,SAAS,CAACQ,OAAV,CAAkB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/C,QAAID,IAAI,CAACE,IAAL,KAAcL,KAAlB,EAAyB,OAAOI,KAAP;AAC1B,GAFa,CAAd;AAGA,sBACE,QAAC,QAAD;AAAU,IAAA,SAAS,EAAG,GAAEJ,KAAM,EAA9B;AAAA,eACGN,SAAS,CAACQ,OAAV,CAAkB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClC,UAAID,IAAI,CAACE,IAAL,KAAcL,KAAlB,EACE,oBAAO;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,GAAG,EAAEG,IAAI,CAACG,IAA/B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAHA,CADH,eAKE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,gBAAwBN;AAAxB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;MAbuBD,U","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport listToken from \"../firebase/tokenList\";\r\nimport ETH from \"../assets/token/eth.png\";\r\nimport BNB from \"../assets/token/bnb.png\";\r\n\r\nconst TokenRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  min-height: 60px;\r\n  border-bottom: 1px solid #d9d9d9;\r\n\r\n  .img {\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 50%;\r\n    border: 1px solid #333;\r\n    padding: 4px;\r\n    margin-left: 16px;\r\n  }\r\n  .name {\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: bold;\r\n    margin-left: 8px;\r\n  }\r\n`;\r\n\r\nexport default function ModalToken({ token }) {\r\n  const count = listToken.forEach((item, index) => {\r\n    if (item.name === token) return index;\r\n  });\r\n  return (\r\n    <TokenRow className={`${token}`}>\r\n      {listToken.forEach((item, index) => {\r\n        if (item.name === token)\r\n          return <img className=\"img\" src={item.logo} alt=\"\" />;\r\n      })}\r\n      <span className=\"name\">{token}</span>\r\n    </TokenRow>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}