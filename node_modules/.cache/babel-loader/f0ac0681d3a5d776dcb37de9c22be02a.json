{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace_local\\\\16USMASK\\\\16usmask\\\\src\\\\pages\\\\Login.js\";\nimport { Button } from \"antd\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport logo from \"../assets/logo.png\";\nimport googleLogo from \"../assets/google.png\"; // import { Link } from \"react-router-dom\";\n// import { addDocument } from \"../firebase/services\";\n\nimport { doc, setDoc, serverTimestamp } from \"firebase/firestore\";\nimport { auth } from \"../firebase/config\";\nimport { db } from \"../firebase/config\";\nimport { signInWithPopup, getAdditionalUserInfo, GoogleAuthProvider } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginWrapper = styled.div`\n  max-width: 940px;\n  margin: 0 auto;\n  margin-top: 60px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  .img {\n    max-width: 258px;\n    max-height: 258px;\n  }\n  .text {\n    font-size: 28px;\n    font-weight: bold;\n    margin-bottom: 32px;\n  }\n  .button {\n    font-size: 20px;\n    font-weight: bold;\n    height: fit-content;\n    width: fit-content;\n    display: flex;\n    align-items: center;\n    .logo {\n      margin-right: 8px;\n      width: 20px;\n      height: 20px;\n    }\n    .button:hover {\n      color: #0074dc;\n    }\n  }\n`;\n_c = LoginWrapper;\nconst googleProvider = new GoogleAuthProvider();\nexport default function Login() {\n  const handleLogin = async provider => {\n    await signInWithPopup(auth, provider).then(result => {\n      const user = result.user;\n      const data = getAdditionalUserInfo(result);\n\n      if (data === null || data === void 0 ? void 0 : data.isNewUser) {\n        // addDocument(\"users\", {\n        //   displayName: user.displayName,\n        //   email: user.email,\n        //   photoURL: user.photoURL,\n        //   uid: user.uid,\n        //   providerId: user.providerId,\n        //   balance: 100,\n        // });\n        setDoc(doc(db, \"users\", user.uid), {\n          displayName: user.displayName,\n          email: user.email,\n          photoURL: user.photoURL,\n          uid: user.uid,\n          providerId: user.providerId,\n          balance: 100,\n          createdAt: serverTimestamp()\n        });\n      }\n    }).catch(error => {\n      console.log(\"Error Login!!!\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(LoginWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      className: \"img\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text\",\n      children: \"Ch\\xE0o m\\u1EEBng b\\u1EA1n tr\\u1EDF l\\u1EA1i !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"button\",\n      type: \"ghost\",\n      shape: \"round\",\n      onClick: () => handleLogin(googleProvider),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: googleLogo,\n        className: \"logo\",\n        alt: \"google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), \"\\u0110\\u0103ng nh\\u1EADp b\\u1EB1ng Google\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Login;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginWrapper\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["D:/Workspace_local/16USMASK/16usmask/src/pages/Login.js"],"names":["Button","React","styled","logo","googleLogo","doc","setDoc","serverTimestamp","auth","db","signInWithPopup","getAdditionalUserInfo","GoogleAuthProvider","LoginWrapper","div","googleProvider","Login","handleLogin","provider","then","result","user","data","isNewUser","uid","displayName","email","photoURL","providerId","balance","createdAt","catch","error","console","log"],"mappings":";AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB,C,CACA;AACA;;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,eAAtB,QAA8C,oBAA9C;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,EAAT,QAAmB,oBAAnB;AAEA,SACEC,eADF,EAEEC,qBAFF,EAGEC,kBAHF,QAIO,eAJP;;AAMA,MAAMC,YAAY,GAAGX,MAAM,CAACY,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhCA;KAAMD,Y;AAiCN,MAAME,cAAc,GAAG,IAAIH,kBAAJ,EAAvB;AAEA,eAAe,SAASI,KAAT,GAAiB;AAC9B,QAAMC,WAAW,GAAG,MAAOC,QAAP,IAAoB;AACtC,UAAMR,eAAe,CAACF,IAAD,EAAOU,QAAP,CAAf,CACHC,IADG,CACGC,MAAD,IAAY;AAChB,YAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;AACA,YAAMC,IAAI,GAAGX,qBAAqB,CAACS,MAAD,CAAlC;;AACA,UAAIE,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEC,SAAV,EAAqB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAjB,QAAAA,MAAM,CAACD,GAAG,CAACI,EAAD,EAAK,OAAL,EAAcY,IAAI,CAACG,GAAnB,CAAJ,EAA6B;AACjCC,UAAAA,WAAW,EAAEJ,IAAI,CAACI,WADe;AAEjCC,UAAAA,KAAK,EAAEL,IAAI,CAACK,KAFqB;AAGjCC,UAAAA,QAAQ,EAAEN,IAAI,CAACM,QAHkB;AAIjCH,UAAAA,GAAG,EAAEH,IAAI,CAACG,GAJuB;AAKjCI,UAAAA,UAAU,EAAEP,IAAI,CAACO,UALgB;AAMjCC,UAAAA,OAAO,EAAE,GANwB;AAOjCC,UAAAA,SAAS,EAAEvB,eAAe;AAPO,SAA7B,CAAN;AASD;AACF,KAvBG,EAwBHwB,KAxBG,CAwBIC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B;AACD,KA1BG,CAAN;AA2BD,GA5BD;;AA8BA,sBACE,QAAC,YAAD;AAAA,4BACE;AAAK,MAAA,GAAG,EAAE7B,IAAV;AAAgB,MAAA,SAAS,EAAC,KAA1B;AAAgC,MAAA,GAAG,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE,QAAC,MAAD;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,OAAO,EAAE,MAAMc,WAAW,CAACF,cAAD,CAJ5B;AAAA,8BAME;AAAK,QAAA,GAAG,EAAEX,UAAV;AAAsB,QAAA,SAAS,EAAC,MAAhC;AAAuC,QAAA,GAAG,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;MAhDuBY,K","sourcesContent":["import { Button } from \"antd\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport logo from \"../assets/logo.png\";\r\nimport googleLogo from \"../assets/google.png\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { addDocument } from \"../firebase/services\";\r\nimport { doc, setDoc, serverTimestamp  } from \"firebase/firestore\";\r\nimport { auth } from \"../firebase/config\";\r\nimport { db } from \"../firebase/config\";\r\n\r\nimport {\r\n  signInWithPopup,\r\n  getAdditionalUserInfo,\r\n  GoogleAuthProvider,\r\n} from \"firebase/auth\";\r\n\r\nconst LoginWrapper = styled.div`\r\n  max-width: 940px;\r\n  margin: 0 auto;\r\n  margin-top: 60px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  .img {\r\n    max-width: 258px;\r\n    max-height: 258px;\r\n  }\r\n  .text {\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n    margin-bottom: 32px;\r\n  }\r\n  .button {\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    height: fit-content;\r\n    width: fit-content;\r\n    display: flex;\r\n    align-items: center;\r\n    .logo {\r\n      margin-right: 8px;\r\n      width: 20px;\r\n      height: 20px;\r\n    }\r\n    .button:hover {\r\n      color: #0074dc;\r\n    }\r\n  }\r\n`;\r\nconst googleProvider = new GoogleAuthProvider();\r\n\r\nexport default function Login() {\r\n  const handleLogin = async (provider) => {\r\n    await signInWithPopup(auth, provider)\r\n      .then((result) => {\r\n        const user = result.user;\r\n        const data = getAdditionalUserInfo(result);\r\n        if (data?.isNewUser) {\r\n          // addDocument(\"users\", {\r\n          //   displayName: user.displayName,\r\n          //   email: user.email,\r\n          //   photoURL: user.photoURL,\r\n          //   uid: user.uid,\r\n          //   providerId: user.providerId,\r\n          //   balance: 100,\r\n          // });\r\n          setDoc(doc(db, \"users\", user.uid), {\r\n            displayName: user.displayName,\r\n            email: user.email,\r\n            photoURL: user.photoURL,\r\n            uid: user.uid,\r\n            providerId: user.providerId,\r\n            balance: 100,\r\n            createdAt: serverTimestamp(),\r\n          })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error Login!!!\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <LoginWrapper>\r\n      <img src={logo} className=\"img\" alt=\"logo\" />\r\n      <span className=\"text\">Chào mừng bạn trở lại !</span>\r\n      {/* <Link to=\"/\"> */}\r\n      <Button\r\n        className=\"button\"\r\n        type=\"ghost\"\r\n        shape=\"round\"\r\n        onClick={() => handleLogin(googleProvider)}\r\n      >\r\n        <img src={googleLogo} className=\"logo\" alt=\"google\" />\r\n        Đăng nhập bằng Google\r\n      </Button>\r\n      {/* </Link> */}\r\n    </LoginWrapper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}