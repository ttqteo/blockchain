[{"D:\\Workspace_local\\16USMASK\\16usmask\\src\\index.js":"1","D:\\Workspace_local\\16USMASK\\16usmask\\src\\reportWebVitals.js":"2","D:\\Workspace_local\\16USMASK\\16usmask\\src\\App.js":"3","D:\\Workspace_local\\16USMASK\\16usmask\\src\\pages\\Dashboard.js":"4","D:\\Workspace_local\\16USMASK\\16usmask\\src\\pages\\Buy.js":"5","D:\\Workspace_local\\16USMASK\\16usmask\\src\\pages\\Login.js":"6","D:\\Workspace_local\\16USMASK\\16usmask\\src\\pages\\Home.js":"7","D:\\Workspace_local\\16USMASK\\16usmask\\src\\pages\\Send.js":"8","D:\\Workspace_local\\16USMASK\\16usmask\\src\\pages\\Swap.js":"9","D:\\Workspace_local\\16USMASK\\16usmask\\src\\components\\Header.js":"10","D:\\Workspace_local\\16USMASK\\16usmask\\src\\Context\\AuthProvider.js":"11","D:\\Workspace_local\\16USMASK\\16usmask\\src\\components\\Asset.js":"12","D:\\Workspace_local\\16USMASK\\16usmask\\src\\components\\Activity.js":"13","D:\\Workspace_local\\16USMASK\\16usmask\\src\\firebase\\config.js":"14","D:\\Workspace_local\\16USMASK\\16usmask\\src\\firebase\\services.js":"15","D:\\Workspace_local\\16USMASK\\16usmask\\src\\components\\Copyright.js":"16","D:\\Workspace_local\\16USMASK\\16usmask\\src\\components\\ModalToken.js":"17","D:\\Workspace_local\\16USMASK\\16usmask\\src\\firebase\\tokenList.js":"18","D:\\Workspace_local\\16USMASK\\16usmask\\src\\Context\\AssetProvider.js":"19"},{"size":517,"mtime":1637760036461,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":1250,"mtime":1639911194359,"results":"23","hashOfConfig":"21"},{"size":7993,"mtime":1639815727219,"results":"24","hashOfConfig":"21"},{"size":5075,"mtime":1639815727218,"results":"25","hashOfConfig":"21"},{"size":3739,"mtime":1639815727220,"results":"26","hashOfConfig":"21"},{"size":3654,"mtime":1637760036464,"results":"27","hashOfConfig":"21"},{"size":7487,"mtime":1639815727221,"results":"28","hashOfConfig":"21"},{"size":7044,"mtime":1639815727221,"results":"29","hashOfConfig":"21"},{"size":3991,"mtime":1637760036459,"results":"30","hashOfConfig":"21"},{"size":1729,"mtime":1639815727209,"results":"31","hashOfConfig":"21"},{"size":1160,"mtime":1639815727215,"results":"32","hashOfConfig":"21"},{"size":2861,"mtime":1637760036457,"results":"33","hashOfConfig":"21"},{"size":650,"mtime":1639815727218,"results":"34","hashOfConfig":"21"},{"size":269,"mtime":1637338983881,"results":"35","hashOfConfig":"21"},{"size":489,"mtime":1637760036458,"results":"36","hashOfConfig":"21"},{"size":871,"mtime":1639815727216,"results":"37","hashOfConfig":"21"},{"size":588,"mtime":1637760036460,"results":"38","hashOfConfig":"21"},{"size":677,"mtime":1639815727208,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"amcat9",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},"D:\\Workspace_local\\16USMASK\\16usmask\\src\\index.js",[],["88","89"],"D:\\Workspace_local\\16USMASK\\16usmask\\src\\reportWebVitals.js",[],"D:\\Workspace_local\\16USMASK\\16usmask\\src\\App.js",[],"D:\\Workspace_local\\16USMASK\\16usmask\\src\\pages\\Dashboard.js",["90","91","92","93","94","95","96"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"antd\";\r\nimport eth from \"../assets/token/eth_original.png\";\r\nimport Asset from \"../components/Asset.js\";\r\nimport Activity from \"../components/Activity.js\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Context/AuthProvider\";\r\nimport { AssetContext } from \"../Context/AssetProvider\";\r\nimport { doc, onSnapshot } from \"firebase/firestore\";\r\nimport { db } from \"../firebase/config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nconst Wrapper = styled.div`\r\n  max-width: 874px;\r\n  height: 100%;\r\n  margin: 8px auto 0;\r\n  background-color: #fff;\r\n  border-top-left-radius: 20px;\r\n  border-top-right-radius: 20px;\r\n  border: 2px solid #ccc;\r\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);\r\n  @media (max-width: 768px) {\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nconst PublicKey = styled.div`\r\n  border-bottom: 2px solid #ccc;\r\n  height: 84px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  .info {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    height: 90%;\r\n    width: 300px;\r\n  }\r\n  .info .name {\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n  }\r\n  .info .key {\r\n    font-size: 18;\r\n    font-weight: medium;\r\n  }\r\n  .info:hover {\r\n    width: 200px;\r\n    border-radius: 20px;\r\n    background: rgba(204, 204, 204, 0.25);\r\n    display: flex;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst FunctionWrapper = styled.div`\r\n  border-bottom: 2px solid #ccc;\r\n  height: 310px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  flex-direction: column;\r\n  .summary {\r\n    margin-top: 16px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .summary .img {\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 50%;\r\n    border: 1px solid #333;\r\n    padding: 4px;\r\n  }\r\n  .summary .eth {\r\n    margin: 16px 0 11px;\r\n    font-size: 40px;\r\n    line-height: 40px;\r\n    font-weight: bold;\r\n  }\r\n  .summary .usd {\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: medium;\r\n  }\r\n  .function {\r\n    margin-top: 33px;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  .function .item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .function .item:nth-child(2) {\r\n    margin: 0 32px;\r\n  }\r\n  .function .item span {\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    margin-top: 3px;\r\n    color: #333;\r\n  }\r\n  .function .function-button {\r\n    background-color: #0074dc;\r\n  }\r\n  .function .function-button:hover {\r\n    filter: brightness(1.1);\r\n  }\r\n`;\r\n\r\nconst AAWrapper = styled.div`\r\n  .heading {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .heading .title {\r\n    font-size: 20px;\r\n    font-weight: medium;\r\n    line-height: 24px;\r\n    color: #666;\r\n    width: calc(100% / 2);\r\n    border-bottom: 2px solid #ccc;\r\n    height: 52px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n  }\r\n  .heading .title.active {\r\n    color: #000;\r\n    font-weight: bold;\r\n    border-bottom: 4px solid #000;\r\n  }\r\n  .assets__wrapper {\r\n    overflow-y: scroll;\r\n    width: 100%;\r\n    height: calc(100vh - 540px);\r\n  }\r\n  .assets__wrapper.hide {\r\n    display: none;\r\n  }\r\n  .button {\r\n    margin: 24px auto 32px;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  .button button {\r\n    background-color: #0074dc;\r\n    font-size: 24px;\r\n    width: fit-content;\r\n    height: fit-content;\r\n  }\r\n  .activities_wrapper {\r\n    overflow-y: scroll;\r\n    width: 100%;\r\n    height: calc(100vh - 540px);\r\n  }\r\n  .activities_wrapper.hide {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nfunction Dashboard() {\r\n  const [coins, setCoins] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=false\"\r\n      )\r\n      .then((res) => {\r\n        setCoins(res.data);\r\n        console.log(res.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  console.log(coins);\r\n\r\n  let userStorage = JSON.parse(localStorage.getItem(\"users\"));\r\n  let {\r\n    user: { displayName, uid, photoURL },\r\n  } = useContext(AuthContext);\r\n  let {\r\n    assetList: { list },\r\n  } = useContext(AssetContext);\r\n  const exchangeRateUTHToUsd = 4158;\r\n\r\n  const handleClickHeading = (e) => {\r\n    document\r\n      .querySelectorAll(\".heading .title\")\r\n      .forEach((value) => value.classList.remove(\"active\"));\r\n    e.target.classList.toggle(\"active\");\r\n    document.querySelectorAll(\".heading .title\").forEach((value, index) => {\r\n      if (value.closest(\".active\")) {\r\n        document\r\n          .querySelector(\".assets__wrapper\")\r\n          .classList.toggle(\"hide\", index === 1);\r\n        document\r\n          .querySelector(\".activities_wrapper\")\r\n          .classList.toggle(\"hide\", index === 0);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleCopyWallet = (uid) => {\r\n    navigator.clipboard.writeText(uid);\r\n    alert(\r\n      'Sao chép địa chỉ ví thành công !\\nĐịa chỉ ví của bạn là \"' + uid + '\"'\r\n    );\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <PublicKey>\r\n        <div className=\"info\" onClick={() => handleCopyWallet(uid)}>\r\n          <span className=\"name\"> {displayName} </span>\r\n          <span className=\"key\">\r\n            {\" \"}\r\n            {`${uid ? uid.substring(0, 4) : \"\"} ... ${\r\n              uid ? uid.substring(uid.length - 4, uid.length) : \"\"\r\n            }`}{\" \"}\r\n          </span>\r\n        </div>\r\n      </PublicKey>\r\n      <FunctionWrapper>\r\n        <div className=\"summary\">\r\n          <img className=\"img\" src={eth} alt=\"\" />\r\n          <span className=\"eth\">{uid ? list[0].quantity : \"\"} ETH</span>\r\n          <span className=\"usd\">\r\n            {uid ? list[0].quantity * exchangeRateUTHToUsd : 0} USD\r\n          </span>\r\n        </div>\r\n        <div className=\"function\">\r\n          <Link to=\"/buy\" className=\"item\">\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"circle\"\r\n              size=\"large\"\r\n              icon={<i className=\"fas fa-dollar-sign\"></i>}\r\n              className=\"function-button\"\r\n            />\r\n            <span>Mua</span>\r\n          </Link>\r\n          <Link to=\"/send\" className=\"item\">\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"circle\"\r\n              size=\"large\"\r\n              icon={<i className=\"far fa-paper-plane\"></i>}\r\n              className=\"function-button\"\r\n            />\r\n            <span>Gửi</span>\r\n          </Link>\r\n          <Link to=\"/swap\" className=\"item\">\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"circle\"\r\n              size=\"large\"\r\n              icon={<i className=\"fas fa-sync-alt\"></i>}\r\n              className=\"function-button\"\r\n            />\r\n            <span>Đổi</span>\r\n          </Link>\r\n        </div>\r\n      </FunctionWrapper>\r\n      <AAWrapper>\r\n        <div className=\"heading\" onClick={handleClickHeading}>\r\n          <div className=\"title active\">Tài sản</div>\r\n          <div className=\"title \">Hoạt động</div>\r\n        </div>\r\n        <div className=\"assets__wrapper\">\r\n          {uid\r\n            ? list.map((user, index) => {\r\n                return (\r\n                  <Asset\r\n                    key={index}\r\n                    code={user.code}\r\n                    logoURL={user.logoURL}\r\n                    quantity={user.quantity}\r\n                  />\r\n                );\r\n              })\r\n            : \"\"}\r\n        </div>\r\n        <div className=\"activities_wrapper hide\">\r\n          <Activity\r\n            type=\"buy\"\r\n            wallet=\"\"\r\n            token1=\"\"\r\n            value=\"100\"\r\n            token2=\"\"\r\n            date=\"12:15PM Nov 10th, 2021\"\r\n          />\r\n        </div>\r\n      </AAWrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","D:\\Workspace_local\\16USMASK\\16usmask\\src\\pages\\Buy.js",["97","98"],"import React, { useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"antd\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Context/AuthProvider\";\r\nimport { AssetContext } from \"../Context/AssetProvider\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nimport { db } from \"../firebase/config\";\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 874px;\r\n  margin: 8px auto 0;\r\n  background-color: #fff;\r\n  border-radius: 20px;\r\n  border: 2px solid #ccc;\r\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);\r\n  @media (max-width: 768px) {\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nconst HeadingWrapper = styled.div`\r\n  position: relative;\r\n  border-bottom: 2px solid #ccc;\r\n  height: 84px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  .name {\r\n    font-size: 36px;\r\n    font-weight: bold;\r\n  }\r\n  .back {\r\n    position: absolute;\r\n    right: 32px;\r\n    font-size: 24px;\r\n    color: #0074dc;\r\n    border-bottom: 1px solid #0074dc;\r\n    cursor: pointer;\r\n  }\r\n  .back .back-icon {\r\n    margin-right: 4px;\r\n  }\r\n  .back:hover {\r\n    filter: brightness(1.1);\r\n  }\r\n  @media (max-width: 375px) {\r\n    .back {\r\n      font-size: 18px;\r\n      right: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FunctionWrapper = styled.div`\r\n  height: 310px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  .heading {\r\n    font-size: 16px;\r\n    font-style: italic;\r\n    font-weight: bold;\r\n    color: #ec1515;\r\n    margin-top: 20px;\r\n  }\r\n  .usdController {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 36px;\r\n  }\r\n  .usdController .minus:hover {\r\n    color: #0074dc;\r\n    border: 1px solid #0074dc;\r\n  }\r\n  .usdController .plus {\r\n    background-color: #0074dc;\r\n  }\r\n  .usdController .plus:hover {\r\n    filter: brightness(1.1);\r\n  }\r\n  .usdController .money-wrapper {\r\n    font-size: 40px;\r\n    font-weight: bold;\r\n    margin: 0 16px;\r\n  }\r\n  .end-button {\r\n    margin-top: 36px;\r\n    background-color: #0074dc;\r\n    font-size: 20px;\r\n    height: fit-content;\r\n    width: fit-content;\r\n  }\r\n  .end-button:hover {\r\n    filter: brightness(1.1);\r\n  }\r\n`;\r\n\r\nexport default function Buy() {\r\n  let navigate = useNavigate();\r\n  let userStorage = JSON.parse(localStorage.getItem(\"users\"));\r\n  const [cash, setCash] = useState(0);\r\n  let {\r\n    user: { uid },\r\n  } = useContext(AuthContext);\r\n\r\n  let {\r\n    assetList: { list },\r\n  } = useContext(AssetContext);\r\n\r\n  const handleBuy = () => {\r\n    const value = parseInt(document.getElementById(\"money\").innerText);\r\n    userStorage.map((user) => {\r\n      if (user.uid === uid) {\r\n        //xử lí mua\r\n        let assetBuy = [];\r\n        list.map((item) => {\r\n          if (item.code !== \"USD\") {\r\n            return assetBuy.push(item);\r\n          } else {\r\n            assetBuy = [\r\n              ...assetBuy,\r\n              {\r\n                code: item.code,\r\n                quantity: item.quantity + value,\r\n                logoURL: item.logoURL,\r\n              },\r\n            ];\r\n          }\r\n        });\r\n        // Lưu lại lên firebase\r\n        setDoc(doc(db, \"users\", uid), {\r\n          displayName: user.displayName,\r\n          email: user.email,\r\n          photoURL: user.photoURL,\r\n          uid: user.uid,\r\n          asset: assetBuy,\r\n          createdAt: user.createdAt,\r\n          activity: user.activity,\r\n        });\r\n      }\r\n    });\r\n    alert(\"Bạn đã mua \" + value + \" USD\");\r\n    window.location.reload();\r\n    navigate(\"/\");\r\n    setCash(0);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <HeadingWrapper>\r\n        <span className=\"name\">Mua</span>\r\n        <Link to=\"/\" className=\"back\">\r\n          <i className=\"fas fa-angle-left back-icon\"></i>Quay lại\r\n        </Link>\r\n      </HeadingWrapper>\r\n      <FunctionWrapper>\r\n        <span className=\"heading\">Lưu ý chỉ mua được USD</span>\r\n        <div className=\"usdController\">\r\n          <Button\r\n            size=\"large\"\r\n            type=\"ghost\"\r\n            shape=\"circle\"\r\n            className=\"minus\"\r\n            icon={<i className=\"fas fa-minus\"></i>}\r\n            onClick={() => cash >= 1 && setCash(cash - 1)}\r\n          />\r\n          <div className=\"money-wrapper\">\r\n            $\r\n            <span\r\n              id=\"money\"\r\n              contentEditable=\"true\"\r\n              onKeyPress={(e) => e.code === \"Enter\" && e.preventDefault()}\r\n              suppressContentEditableWarning={true}\r\n            >\r\n              {cash}\r\n            </span>\r\n          </div>\r\n          <Button\r\n            size=\"large\"\r\n            type=\"primary\"\r\n            shape=\"circle\"\r\n            className=\"plus\"\r\n            icon={<i className=\"fas fa-plus\"></i>}\r\n            onClick={() => setCash(cash + 1)}\r\n          />\r\n        </div>\r\n        <Button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          shape=\"round\"\r\n          className=\"end-button\"\r\n          onClick={handleBuy}\r\n        >\r\n          Hoàn tất\r\n        </Button>\r\n      </FunctionWrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n","D:\\Workspace_local\\16USMASK\\16usmask\\src\\pages\\Login.js",[],"D:\\Workspace_local\\16USMASK\\16usmask\\src\\pages\\Home.js",[],"D:\\Workspace_local\\16USMASK\\16usmask\\src\\pages\\Send.js",["99","100","101","102"],"import React, { memo, useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { AutoComplete, Button, Input, Select } from \"antd\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Context/AuthProvider\";\r\nimport { AssetContext } from \"../Context/AssetProvider\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nimport { db } from \"../firebase/config\";\r\nimport listToken from \"../firebase/tokenList\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 874px;\r\n  margin: 8px auto 0;\r\n  background-color: #fff;\r\n  border-radius: 20px;\r\n  border: 2px solid #ccc;\r\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);\r\n  @media (max-width: 768px) {\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nconst HeadingWrapper = styled.div`\r\n  position: relative;\r\n  border-bottom: 2px solid #ccc;\r\n  height: 84px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  .name {\r\n    font-size: 36px;\r\n    font-weight: bold;\r\n  }\r\n  .back {\r\n    position: absolute;\r\n    right: 32px;\r\n    font-size: 24px;\r\n    color: #0074dc;\r\n    border-bottom: 1px solid #0074dc;\r\n    cursor: pointer;\r\n  }\r\n  .back .back-icon {\r\n    margin-right: 4px;\r\n  }\r\n  .back:hover {\r\n    filter: brightness(1.1);\r\n  }\r\n  @media (max-width: 375px) {\r\n    .back {\r\n      font-size: 18px;\r\n      right: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FunctionWrapper = styled.div`\r\n  height: 310px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  .end-button {\r\n    margin-top: 36px;\r\n    background-color: #0074dc;\r\n    font-size: 20px;\r\n    height: fit-content;\r\n    width: fit-content;\r\n  }\r\n  .end-button:hover {\r\n    filter: brightness(1.1);\r\n  }\r\n  .inputWallet {\r\n    margin-top: 32px;\r\n    width: 315px;\r\n  }\r\n  .inputToken {\r\n    margin-top: 32px;\r\n    width: 315px;\r\n    .ant-select-selector {\r\n      font-size: 16px;\r\n      display: flex;\r\n      align-items: center;\r\n      padding-bottom: 4px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Send() {\r\n  let navigate = useNavigate();\r\n\r\n  let {\r\n    user: { uid },\r\n  } = useContext(AuthContext);\r\n  let {\r\n    assetList: { list },\r\n  } = useContext(AssetContext);\r\n  let userStorage = JSON.parse(localStorage.getItem(\"users\"));\r\n  const coinCodeData = [\"ETH\", \"BNB\", \"BTC\", \"ADA\", \"SOL\", \"USD\"];\r\n  const [selectedCoin, setSelectedCoin] = useState(coinCodeData[0]);\r\n  const [receiver, setReceiver] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(0);\r\n  const handleTransaction = () => {\r\n    alert(\"Gửi thành công !\");\r\n    userStorage.map((user) => {\r\n      if (user.uid === receiver) {\r\n        // xử lí asset mới của ng nhận\r\n        let userReceiver = user.asset;\r\n        let assetReceiver = [];\r\n        userReceiver.map((item) => {\r\n          if (item.code !== selectedCoin) {\r\n            return assetReceiver.push(item);\r\n          } else {\r\n            console.log(item.quantity);\r\n            assetReceiver = [\r\n              ...assetReceiver,\r\n              {\r\n                code: item.code,\r\n                quantity: item.quantity + parseInt(quantity),\r\n                logoURL: item.logoURL,\r\n              },\r\n            ];\r\n          }\r\n        });\r\n        // Lưu dữ liệu người nhận lên firebase\r\n        setDoc(doc(db, \"users\", user.uid), {\r\n          displayName: user.displayName,\r\n          email: user.email,\r\n          photoURL: user.photoURL,\r\n          uid: user.uid,\r\n          asset: assetReceiver,\r\n          createdAt: user.createdAt,\r\n          activity: user.activity,\r\n        });\r\n      }\r\n      if (user.uid === uid) {\r\n        // xử lí asset mới của ng gửi\r\n        let assetSender = [];\r\n        user.asset.map((item) => {\r\n          if (item.code !== selectedCoin) {\r\n            return assetSender.push(item);\r\n          } else {\r\n            console.log(item.quantity);\r\n            assetSender = [\r\n              ...assetSender,\r\n              {\r\n                code: item.code,\r\n                quantity: item.quantity - parseInt(quantity),\r\n                logoURL: item.logoURL,\r\n              },\r\n            ];\r\n          }\r\n        });\r\n        setDoc(doc(db, \"users\", user.uid), {\r\n          displayName: user.displayName,\r\n          email: user.email,\r\n          photoURL: user.photoURL,\r\n          uid: user.uid,\r\n          asset: assetSender,\r\n          createdAt: user.createdAt,\r\n          activity: user.activity,\r\n        });\r\n      }\r\n    });\r\n    setQuantity(0);\r\n    setReceiver(\"\");\r\n    window.location.reload();\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <HeadingWrapper>\r\n        <span className=\"name\">Gửi</span>\r\n        <Link to=\"/\" className=\"back\">\r\n          <i className=\"fas fa-angle-left back-icon\"></i>Quay lại\r\n        </Link>\r\n      </HeadingWrapper>\r\n      <FunctionWrapper>\r\n        <Input\r\n          className=\"inputWallet\"\r\n          placeholder=\"Nhập ví cần gửi\"\r\n          value={receiver}\r\n          onChange={(e) => setReceiver(e.target.value)}\r\n          allowClear\r\n          size=\"large\"\r\n        />\r\n        <Input.Group size=\"large\" compact className=\"inputToken\">\r\n          <Select\r\n            style={{ width: \"35%\" }}\r\n            defaultValue=\"ETH\"\r\n            onChange={(e) => {\r\n              setSelectedCoin(e);\r\n            }}\r\n          >\r\n            <Option value=\"ETH\">\r\n              <img\r\n                src={listToken[0].logo}\r\n                alt=\"\"\r\n                style={{\r\n                  marginRight: \"4px\",\r\n                }}\r\n              />{\" \"}\r\n              ETH\r\n            </Option>\r\n            <Option value=\"BNB\">\r\n              <img\r\n                src={listToken[1].logo}\r\n                alt=\"\"\r\n                style={{\r\n                  marginRight: \"4px\",\r\n                }}\r\n              />{\" \"}\r\n              BNB\r\n            </Option>\r\n            <Option value=\"BTC\">\r\n              <img\r\n                src={listToken[2].logo}\r\n                alt=\"\"\r\n                style={{\r\n                  marginRight: \"4px\",\r\n                }}\r\n              />{\" \"}\r\n              BTC\r\n            </Option>\r\n            <Option value=\"USD\">\r\n              <img\r\n                src={listToken[3].logo}\r\n                alt=\"\"\r\n                style={{\r\n                  marginRight: \"4px\",\r\n                }}\r\n              />{\" \"}\r\n              USD\r\n            </Option>\r\n            <Option value=\"ADA\">\r\n              <img\r\n                src={listToken[4].logo}\r\n                alt=\"\"\r\n                style={{\r\n                  marginRight: \"4px\",\r\n                }}\r\n              />{\" \"}\r\n              ADA\r\n            </Option>\r\n            <Option value=\"SOL\">\r\n              <img\r\n                src={listToken[5].logo}\r\n                alt=\"\"\r\n                style={{\r\n                  marginRight: \"4px\",\r\n                }}\r\n              />{\" \"}\r\n              SOL\r\n            </Option>\r\n          </Select>\r\n          <AutoComplete\r\n            style={{ width: \"65%\" }}\r\n            placeholder=\"Số lượng Token\"\r\n            options={[{ value: \"10\" }, { value: \"100\" }]}\r\n          />\r\n        </Input.Group>\r\n        <Button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          shape=\"round\"\r\n          className=\"end-button\"\r\n          onClick={handleTransaction}\r\n        >\r\n          Gửi\r\n        </Button>\r\n      </FunctionWrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default memo(Send);\r\n","D:\\Workspace_local\\16USMASK\\16usmask\\src\\pages\\Swap.js",["103","104"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { AutoComplete, Button, Input, Select } from \"antd\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport listToken from \"../firebase/tokenList\";\r\nimport { doc, setDoc, set } from \"firebase/firestore\";\r\nimport { db } from \"../firebase/config\";\r\nconst { Option } = Select;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 874px;\r\n  margin: 8px auto 0;\r\n  background-color: #fff;\r\n  border-radius: 20px;\r\n  border: 2px solid #ccc;\r\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);\r\n  @media (max-width: 768px) {\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nconst HeadingWrapper = styled.div`\r\n  position: relative;\r\n  border-bottom: 2px solid #ccc;\r\n  height: 84px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  .name {\r\n    font-size: 36px;\r\n    font-weight: bold;\r\n  }\r\n  .back {\r\n    position: absolute;\r\n    right: 32px;\r\n    font-size: 24px;\r\n    color: #0074dc;\r\n    border-bottom: 1px solid #0074dc;\r\n    cursor: pointer;\r\n  }\r\n  .back .back-icon {\r\n    margin-right: 4px;\r\n  }\r\n  .back:hover {\r\n    filter: brightness(1.1);\r\n  }\r\n  @media (max-width: 375px) {\r\n    .back {\r\n      font-size: 18px;\r\n      right: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FunctionWrapper = styled.div`\r\n  height: 310px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  .end-button {\r\n    margin-top: 16px;\r\n    background-color: #0074dc;\r\n    font-size: 20px;\r\n    height: fit-content;\r\n    width: fit-content;\r\n  }\r\n  .end-button:hover {\r\n    filter: brightness(1.1);\r\n  }\r\n  .heading {\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    margin-top: 10px;\r\n  }\r\n  .description {\r\n    font-size: 12px;\r\n    font-weight: medium;\r\n    font-style: italic;\r\n    margin-left: 16px;\r\n  }\r\n  .inputToken {\r\n    margin-top: 4px;\r\n    width: 315px;\r\n    .ant-select-selector {\r\n      font-size: 16px;\r\n      display: flex;\r\n      align-items: center;\r\n      padding-bottom: 4px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Swap() {\r\n  let navigate = useNavigate();\r\n  const addDoc = () => {\r\n    setDoc(doc(db, \"blockchain\", \"12345466\"), {\r\n      name: {\r\n        ho: \"vo van\",\r\n        ten: \"quang\",\r\n      },\r\n      age: 22,\r\n    });\r\n  };\r\n  const handleSwap = () => {\r\n    alert(\"Chuyển đổi thành công !\");\r\n    window.location.reload();\r\n    navigate(\"/\");\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <HeadingWrapper>\r\n        <span className=\"name\">Chuyển</span>\r\n        <Link to=\"/\" className=\"back\">\r\n          <i className=\"fas fa-angle-left back-icon\"></i>Quay lại\r\n        </Link>\r\n      </HeadingWrapper>\r\n      <FunctionWrapper>\r\n        <span className=\"heading\">Chuyển từ</span>\r\n        <Input.Group size=\"large\" compact className=\"inputToken\">\r\n          <Select style={{ width: \"35%\" }} defaultValue=\"ETH\">\r\n            <Option value=\"ETH\">\r\n              <img\r\n                src={listToken[0].logo}\r\n                alt=\"\"\r\n                style={{\r\n                  marginRight: \"4px\",\r\n                }}\r\n              />{\" \"}\r\n              ETH\r\n            </Option>\r\n            <Option value=\"BNB\">\r\n              <img\r\n                src={listToken[1].logo}\r\n                alt=\"\"\r\n                style={{\r\n                  marginRight: \"4px\",\r\n                }}\r\n              />{\" \"}\r\n              BNB\r\n            </Option>\r\n            <Option value=\"BTC\">\r\n              <img\r\n                src={listToken[2].logo}\r\n                alt=\"\"\r\n                style={{\r\n                  marginRight: \"4px\",\r\n                }}\r\n              />{\" \"}\r\n              BTC\r\n            </Option>\r\n            <Option value=\"USD\">\r\n              <img\r\n                src={listToken[3].logo}\r\n                alt=\"\"\r\n                style={{\r\n                  marginRight: \"4px\",\r\n                }}\r\n              />{\" \"}\r\n              USD\r\n            </Option>\r\n            <Option value=\"ADA\">\r\n              <img\r\n                src={listToken[4].logo}\r\n                alt=\"\"\r\n                style={{\r\n                  marginRight: \"4px\",\r\n                }}\r\n              />{\" \"}\r\n              ADA\r\n            </Option>\r\n            <Option value=\"SOL\">\r\n              <img\r\n                src={listToken[5].logo}\r\n                alt=\"\"\r\n                style={{\r\n                  marginRight: \"4px\",\r\n                }}\r\n              />{\" \"}\r\n              SOL\r\n            </Option>\r\n          </Select>\r\n          <AutoComplete\r\n            style={{ width: \"65%\" }}\r\n            placeholder=\"Số lượng Token\"\r\n            options={[{ value: \"10\" }, { value: \"100\" }]}\r\n          />\r\n        </Input.Group>\r\n        <div className=\"description\">Có 2.4545 ETH khả dụng</div>\r\n        <span className=\"heading\">Thành</span>\r\n        <Input.Group size=\"large\" compact className=\"inputToken\">\r\n          <Select style={{ width: \"35%\" }} defaultValue=\"ETH\">\r\n            <Option value=\"ETH\">\r\n              <img\r\n                src={listToken[0].logo}\r\n                alt=\"\"\r\n                style={{\r\n                  marginRight: \"4px\",\r\n                }}\r\n              />{\" \"}\r\n              ETH\r\n            </Option>\r\n            <Option value=\"BNB\">\r\n              <img\r\n                src={listToken[1].logo}\r\n                alt=\"\"\r\n                style={{\r\n                  marginRight: \"4px\",\r\n                }}\r\n              />{\" \"}\r\n              BNB\r\n            </Option>\r\n            <Option value=\"BTC\">\r\n              <img\r\n                src={listToken[2].logo}\r\n                alt=\"\"\r\n                style={{\r\n                  marginRight: \"4px\",\r\n                }}\r\n              />{\" \"}\r\n              BTC\r\n            </Option>\r\n            <Option value=\"USD\">\r\n              <img\r\n                src={listToken[3].logo}\r\n                alt=\"\"\r\n                style={{\r\n                  marginRight: \"4px\",\r\n                }}\r\n              />{\" \"}\r\n              USD\r\n            </Option>\r\n            <Option value=\"ADA\">\r\n              <img\r\n                src={listToken[4].logo}\r\n                alt=\"\"\r\n                style={{\r\n                  marginRight: \"4px\",\r\n                }}\r\n              />{\" \"}\r\n              ADA\r\n            </Option>\r\n            <Option value=\"SOL\">\r\n              <img\r\n                src={listToken[5].logo}\r\n                alt=\"\"\r\n                style={{\r\n                  marginRight: \"4px\",\r\n                }}\r\n              />{\" \"}\r\n              SOL\r\n            </Option>\r\n          </Select>\r\n          <AutoComplete\r\n            style={{ width: \"65%\" }}\r\n            placeholder=\"Số lượng Token\"\r\n            options={[{ value: \"10\" }, { value: \"100\" }]}\r\n          />\r\n        </Input.Group>\r\n        <Button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          shape=\"round\"\r\n          className=\"end-button\"\r\n          onClick={addDoc}\r\n        >\r\n          Chuyển\r\n        </Button>\r\n      </FunctionWrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n","D:\\Workspace_local\\16USMASK\\16usmask\\src\\components\\Header.js",["105"],"import React, { useEffect, useContext } from \"react\";\r\nimport { AuthContext, useAuthState } from \"../Context/AuthProvider\";\r\nimport styled from \"styled-components\";\r\nimport logoName from \"../assets/logo_name.png\";\r\nimport { Avatar, Button } from \"antd\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"../firebase/config\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 80px;\r\n  max-width: 940px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  padding: 0 16px;\r\n  .header {\r\n    &__right {\r\n      height: 60px;\r\n      width: 100%;\r\n    }\r\n    &__left {\r\n      display: flex;\r\n      align-items: center;\r\n      .home {\r\n        &__text {\r\n          color: #0074dc;\r\n          font-size: 18px;\r\n          line-height: 18px;\r\n          border-bottom: 2px solid #0074dc;\r\n          font-weight: 600;\r\n        }\r\n        &__button {\r\n          background-color: #0074dc;\r\n          font-size: 18px;\r\n          font-weight: bold;\r\n          width: fit-content;\r\n          height: fit-content;\r\n          margin-left: 16px;\r\n        }\r\n        &__text:hover {\r\n          filter: brightness(1.1);\r\n        }\r\n        &__button:hover {\r\n          filter: brightness(1.1);\r\n        }\r\n      }\r\n      .home.disabled {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n  .button.disabled {\r\n    display: none;\r\n  }\r\n  .userLogo {\r\n    margin-left: 16px;\r\n  }\r\n  .userLogo.disabled {\r\n    display: none;\r\n  }\r\n  @media (max-width: 768px) {\r\n    height: 60px;\r\n\r\n    .header {\r\n      &__right {\r\n        height: 40px;\r\n        width: auto;\r\n      }\r\n      &__left {\r\n        .home {\r\n          &__text {\r\n            display: none;\r\n          }\r\n          &__button {\r\n            font-size: 16px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 768px) {\r\n    .header {\r\n      &__left {\r\n        .button {\r\n          display: none;\r\n        }\r\n      }\r\n  }\r\n`;\r\n\r\nexport default function Header() {\r\n  let navigate = useNavigate();\r\n  const { isAuthenticated } = useAuthState();\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) navigate(\"/\");\r\n    else navigate(\"/home\");\r\n  }, [isAuthenticated]);\r\n\r\n  let {\r\n    user: { photoURL, displayName },\r\n  } = useContext(AuthContext);\r\n\r\n  let location = useLocation();\r\n  useEffect(() => {\r\n    document\r\n      .querySelector(\".header .userLogo\")\r\n      .classList.toggle(\r\n        \"disabled\",\r\n        location.pathname === \"/home\" || location.pathname === \"/login\"\r\n      );\r\n\r\n    document\r\n      .querySelector(\".header .button\")\r\n      .classList.toggle(\r\n        \"disabled\",\r\n        location.pathname === \"/home\" || location.pathname === \"/login\"\r\n      );\r\n    document\r\n      .querySelector(\".header__left .home\")\r\n      .classList.toggle(\"disabled\", !(location.pathname === \"/home\"));\r\n  }, [location]);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <Wrapper className=\"header\">\r\n        <Link to={isAuthenticated ? \"/\" : \"/home\"}>\r\n          <img src={logoName} className=\"header__right\" alt=\"\" />\r\n        </Link>\r\n        <div className=\"header__left\">\r\n          <div className=\"home\">\r\n            <Link to=\"/login\">\r\n              <span className=\"home__text\">Chưa có ví ?</span>\r\n              <Button className=\"home__button\" type=\"primary\" shape=\"round\">\r\n                Đăng nhập\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              className=\"button\"\r\n              type=\"ghost\"\r\n              shape=\"round\"\r\n              onClick={() => {\r\n                alert(\"Bạn muốn đăng xuất ?\");\r\n                auth.signOut();\r\n              }}\r\n            >\r\n              Đăng xuất\r\n            </Button>\r\n            <Avatar src={photoURL} className=\"userLogo\" size={40}>\r\n              {photoURL ? \"\" : displayName?.charAt(0)?.toUpperCase()}\r\n            </Avatar>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Workspace_local\\16USMASK\\16usmask\\src\\Context\\AuthProvider.js",["106"],"import React, { useEffect, useState, useRef, memo } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"../firebase/config\";\r\nimport { Spin } from \"antd\";\r\nimport { db } from \"../firebase/config\";\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\n// import { addDocument } from \"../firebase/services\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nfunction AuthProvider({ children }) {\r\n  const [user, setUser] = useState({});\r\n  let navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const assetUser = useRef(0);\r\n\r\n  async function readData(uid) {\r\n    let arrs = [];\r\n    const querySnapshot = await getDocs(collection(db, \"users\"));\r\n    querySnapshot.forEach((doc) => {\r\n      arrs = [...arrs, doc.data()];\r\n    });\r\n    localStorage.setItem(\"users\", JSON.stringify(arrs));\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscibed = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        const { displayName, email, uid, photoURL } = user;\r\n        readData(uid);\r\n        setUser({\r\n          displayName,\r\n          email,\r\n          uid,\r\n          photoURL,\r\n        });\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n      // reset user info\r\n      setUser({});\r\n      setIsLoading(false);\r\n    });\r\n\r\n    // clean function\r\n    return () => {\r\n      unsubscibed();\r\n    };\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user }}>\r\n      {isLoading ? <Spin style={{ position: \"fixed\", inset: 0 }} /> : children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default memo(AuthProvider);\r\n\r\nexport const useAuthState = () => {\r\n  return { ...auth, isAuthenticated: auth.currentUser != null };\r\n};\r\n","D:\\Workspace_local\\16USMASK\\16usmask\\src\\components\\Asset.js",["107"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport listToken from \"../firebase/tokenList\";\r\n\r\nconst Row = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  border-bottom: 2px solid #ccc;\r\n  display: flex;\r\n  align-items: center;\r\n  .img {\r\n    margin: 0 24px;\r\n    width: 40px;\r\n    height: 40px;\r\n    border: 1px solid #333;\r\n    padding: 2px;\r\n    border-radius: 50%;\r\n  }\r\n  .text {\r\n    display: flex;\r\n    flex-direction: column;\r\n    color: #000;\r\n    font-size: 18px;\r\n    font-weight: medium;\r\n    line-height: 24px;\r\n  }\r\n  .text .token {\r\n    font-size: 28px;\r\n    line-height: 32px;\r\n    font-weight: bold;\r\n  }\r\n  @media (max-width: 768px) {\r\n    .text .token {\r\n      font-size: 24px;\r\n      line-height: 28px;\r\n    }\r\n`;\r\n\r\nexport default function Asset({ logoURL, quantity, code }) {\r\n  return (\r\n    <Row>\r\n      <img src={logoURL} className=\"img\" alt=\"logo\" />\r\n      <div className=\"text\">\r\n        <span className=\"token\">\r\n          {\" \"}\r\n          {quantity} {code}\r\n        </span>\r\n        <span className=\"usd\">\r\n          $<span id=\"toUsd\">6.600</span> USD\r\n        </span>\r\n      </div>\r\n    </Row>\r\n  );\r\n}\r\n","D:\\Workspace_local\\16USMASK\\16usmask\\src\\components\\Activity.js",["108","109","110","111","112","113"],"import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport listToken from \"../firebase/tokenList\";\r\nimport { AuthContext } from \"../Context/AuthProvider\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nimport { db } from \"../firebase/config\";\r\n\r\nconst Row = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  border-bottom: 2px solid #ccc;\r\n  display: flex;\r\n  align-items: center;\r\n  .img {\r\n    margin: 0 24px;\r\n    width: 40px;\r\n    height: 40px;\r\n    border: 1px solid #333;\r\n    padding: 2px;\r\n    border-radius: 50%;\r\n  }\r\n  .text {\r\n    display: flex;\r\n    flex-direction: column;\r\n    color: #000;\r\n    font-size: 18px;\r\n    font-weight: medium;\r\n    line-height: 24px;\r\n    width: 100%;\r\n  }\r\n  .text .message {\r\n    font-size: 28px;\r\n    line-height: 32px;\r\n    font-weight: bold;\r\n  }\r\n  .date {\r\n    font-size: 18px;\r\n    font-style: italic;\r\n    font-weight: medium;\r\n    max-width: 300px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    .text .message {\r\n      font-size: 24px;\r\n      line-height: 28px;\r\n    }\r\n    .date {\r\n      font-size: 14px;\r\n    }\r\n  @media (max-width: 375px) {\r\n    .text .message {\r\n      font-size: 20px;\r\n      line-height: 20px;\r\n      padding-right: 8px;\r\n    }\r\n    .date {\r\n      font-size: 14px;\r\n    }\r\n    .text {\r\n      font-size: 14px;\r\n    }\r\n`;\r\n\r\nexport default function Activity({\r\n  type,\r\n  wallet,\r\n  token1,\r\n  token2,\r\n  value,\r\n  date,\r\n}) {\r\n  let userStorage = JSON.parse(localStorage.getItem(\"users\"));\r\n  return (\r\n    <Row>\r\n      {type === \"buy\" ? (\r\n        <img src={listToken[3].logo} className=\"img\" alt=\"logo\" />\r\n      ) : type === \"swap\" ? (\r\n        listToken.map(\r\n          (item) =>\r\n            item.name === token2 && (\r\n              <img src={item.logo} className=\"img\" alt=\"logo\" />\r\n            )\r\n        )\r\n      ) : (\r\n        listToken.map(\r\n          (item) =>\r\n            item.name === token1 && (\r\n              <img src={item.logo} className=\"img\" alt=\"logo\" />\r\n            )\r\n        )\r\n      )}\r\n      <div className=\"text\">\r\n        <span className=\"message\">\r\n          Bạn đã{\" \"}\r\n          {type === \"buy\"\r\n            ? `mua USD`\r\n            : type === \"swap\"\r\n            ? `đổi ${token1} sang ${token2}`\r\n            : type === \"send\"\r\n            ? `gửi đến ví ${wallet}`\r\n            : type === \"receive\"\r\n            ? `nhận từ ví ${wallet}`\r\n            : \"\"}\r\n        </span>\r\n        <span className=\"value\">\r\n          {type === \"buy\"\r\n            ? `$${value} USD`\r\n            : type === \"swap\"\r\n            ? `${value} ${token1} = 300 ${token2}`\r\n            : type === \"send\"\r\n            ? `${value} ${token1}`\r\n            : type === \"receive\"\r\n            ? `${value} ${token1}`\r\n            : \"\"}\r\n        </span>\r\n      </div>\r\n      <span className=\"date\">{date}</span>\r\n    </Row>\r\n  );\r\n}\r\n","D:\\Workspace_local\\16USMASK\\16usmask\\src\\firebase\\config.js",[],"D:\\Workspace_local\\16USMASK\\16usmask\\src\\firebase\\services.js",[],"D:\\Workspace_local\\16USMASK\\16usmask\\src\\components\\Copyright.js",[],"D:\\Workspace_local\\16USMASK\\16usmask\\src\\components\\ModalToken.js",[],"D:\\Workspace_local\\16USMASK\\16usmask\\src\\firebase\\tokenList.js",[],"D:\\Workspace_local\\16USMASK\\16usmask\\src\\Context\\AssetProvider.js",["114"],"import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"./AuthProvider\";\r\n\r\nexport const AssetContext = React.createContext();\r\nexport default function AssetProvider({ children }) {\r\n  let {\r\n    user: { uid },\r\n  } = useContext(AuthContext);\r\n  let userStorage = JSON.parse(localStorage.getItem(\"users\"));\r\n  var assetListtemp = [];\r\n  userStorage.map((doc) => {\r\n    if (doc.uid === uid) {\r\n      assetListtemp = doc.asset;\r\n    }\r\n  });\r\n  const assetList = {\r\n    list: assetListtemp,\r\n  };\r\n  console.log(assetList, \"AssetProvider\");\r\n  return (\r\n    <AssetContext.Provider value={{ assetList }}>\r\n      {children}\r\n    </AssetContext.Provider>\r\n  );\r\n}\r\n",{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":7,"column":16,"nodeType":"121","messageId":"122","endLine":7,"endColumn":24},{"ruleId":"119","severity":1,"message":"123","line":10,"column":10,"nodeType":"121","messageId":"122","endLine":10,"endColumn":13},{"ruleId":"119","severity":1,"message":"124","line":10,"column":15,"nodeType":"121","messageId":"122","endLine":10,"endColumn":25},{"ruleId":"119","severity":1,"message":"125","line":11,"column":10,"nodeType":"121","messageId":"122","endLine":11,"endColumn":12},{"ruleId":"119","severity":1,"message":"126","line":12,"column":10,"nodeType":"121","messageId":"122","endLine":12,"endColumn":21},{"ruleId":"119","severity":1,"message":"127","line":185,"column":7,"nodeType":"121","messageId":"122","endLine":185,"endColumn":18},{"ruleId":"119","severity":1,"message":"128","line":187,"column":31,"nodeType":"121","messageId":"122","endLine":187,"endColumn":39},{"ruleId":"129","severity":1,"message":"130","line":114,"column":28,"nodeType":"131","messageId":"132","endLine":114,"endColumn":30},{"ruleId":"129","severity":1,"message":"133","line":118,"column":25,"nodeType":"131","messageId":"134","endLine":118,"endColumn":27},{"ruleId":"119","severity":1,"message":"135","line":97,"column":18,"nodeType":"121","messageId":"122","endLine":97,"endColumn":22},{"ruleId":"129","severity":1,"message":"130","line":106,"column":28,"nodeType":"131","messageId":"132","endLine":106,"endColumn":30},{"ruleId":"129","severity":1,"message":"133","line":111,"column":33,"nodeType":"131","messageId":"134","endLine":111,"endColumn":35},{"ruleId":"129","severity":1,"message":"133","line":140,"column":31,"nodeType":"131","messageId":"134","endLine":140,"endColumn":33},{"ruleId":"119","severity":1,"message":"136","line":6,"column":23,"nodeType":"121","messageId":"122","endLine":6,"endColumn":26},{"ruleId":"119","severity":1,"message":"137","line":105,"column":9,"nodeType":"121","messageId":"122","endLine":105,"endColumn":19},{"ruleId":"138","severity":1,"message":"139","line":99,"column":6,"nodeType":"140","endLine":99,"endColumn":23,"suggestions":"141"},{"ruleId":"119","severity":1,"message":"142","line":16,"column":9,"nodeType":"121","messageId":"122","endLine":16,"endColumn":18},{"ruleId":"119","severity":1,"message":"143","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":17},{"ruleId":"119","severity":1,"message":"144","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":27},{"ruleId":"119","severity":1,"message":"145","line":4,"column":10,"nodeType":"121","messageId":"122","endLine":4,"endColumn":21},{"ruleId":"119","severity":1,"message":"123","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":13},{"ruleId":"119","severity":1,"message":"146","line":5,"column":15,"nodeType":"121","messageId":"122","endLine":5,"endColumn":21},{"ruleId":"119","severity":1,"message":"125","line":6,"column":10,"nodeType":"121","messageId":"122","endLine":6,"endColumn":12},{"ruleId":"119","severity":1,"message":"127","line":72,"column":7,"nodeType":"121","messageId":"122","endLine":72,"endColumn":18},{"ruleId":"129","severity":1,"message":"130","line":11,"column":25,"nodeType":"131","messageId":"132","endLine":11,"endColumn":27},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'doc' is defined but never used.","'onSnapshot' is defined but never used.","'db' is defined but never used.","'useNavigate' is defined but never used.","'userStorage' is assigned a value but never used.","'photoURL' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'list' is assigned a value but never used.","'set' is defined but never used.","'handleSwap' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["149"],"'assetUser' is assigned a value but never used.","'listToken' is defined but never used.","'useContext' is defined but never used.","'AuthContext' is defined but never used.","'setDoc' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [isAuthenticated, navigate]",{"range":"152","text":"153"},[2169,2186],"[isAuthenticated, navigate]"]